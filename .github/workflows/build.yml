name: Publish to Exchange & Deploy to CH2.0

on:
  push:
    branches: [ main ]
    
jobs:         
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Cache dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-maven-

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: 8  

      - name: Increment version in pom.xml
        run: |
          # Extract current version
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # Increment version
          mvn build-helper:parse-version versions:set -DnewVersion=\${parsedVersion.majorVersion}.\${parsedVersion.minorVersion}.\${parsedVersion.nextIncrementalVersion} versions:commit
          
          # Capture the new version
          VERSION_NUMBER=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          
          # Commit the updated pom.xml
          git config user.name "Ajithkumar3003"
          git config user.email "ajithsugu12@gmail.com"
          git add pom.xml
          git commit -m "Incremented version to $VERSION_NUMBER [skip ci]"
          git push origin main

      - name: Check MuleSoft Connector Version
        run: |
          echo "Extracting current connector version from pom.xml..."
          CURRENT_VERSION=$(grep -A1 '<artifactId>mule-http-connector</artifactId>' pom.xml | grep '<version>' | sed -e 's/<version>//' -e 's/<\/version>//' | xargs)
          echo "Current version: $CURRENT_VERSION"
          
          echo "Fetching latest version from MuleSoft repository..."
          LATEST_VERSION=$(curl -s "https://repository.mulesoft.org/nexus/content/repositories/releases/org/mule/connectors/mule-http-connector/maven-metadata.xml" | grep -oPm1 "(?<=<release>)[^<]+")
          echo "Latest version: $LATEST_VERSION"
          
          if [ "$CURRENT_VERSION" != "$LATEST_VERSION" ]; then
            echo "Error: MuleSoft connector is outdated. Current: $CURRENT_VERSION, Latest: $LATEST_VERSION"
            exit 1
          fi
          
          echo "Connector is up-to-date."
          
      - name: Publish to Exchange
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}"

      - name: Deploy to CloudHub 2.0
        run: |
          mvn deploy --settings .maven/settings.xml -DskipMunitTests -DmuleDeploy \
          -Dclient.id="${{ secrets.CONNECTED_APP_CLIENT_ID }}" \
          -Dclient.secret="${{ secrets.CONNECTED_APP_CLIENT_SECRET }}" \
          -Danypoint.platform.client_id="${{ secrets.ANYPOINT_PLATFORM_CLIENT_ID }}" \
          -Danypoint.platform.client_secret="${{ secrets.ANYPOINT_PLATFORM_CLIENT_SECRET }}"
